<script>

function toggle_filter(field) {
    check_box = $('cb_' + field);
    
    if (check_box.checked) {
        Element.show("operators[" + field + "]");
        toggle_operator(field);
    } else {
        Element.hide("operators[" + field + "]");
        Element.hide("values_div[" + field + "]");
  }
}

function toggle_operator(field) {
  operator = $("operators[" + field + "]");
  switch (operator.value) {
    case "!*":
    case "*":
    case "t":
    case "o":
    case "c":
      Element.hide("values_div[" + field + "]");
      break;
    default:
      Element.show("values_div[" + field + "]");
      break;
  }
}

function toggle_multi_select(field) {
    select = $('values[' + field + '][]');
    if (select.multiple == true) {
        select.multiple = false;
    } else {
        select.multiple = true;
    }
}

</script>

<fieldset><legend>Filtres</legend>
<table>
<% Query.available_filters.sort{|a,b| a[1][:order]<=>b[1][:order]}.each do |filter| %>
    <% field = filter[0]
       options = filter[1] %>
    <tr>
    <td valign="top" width="200">
        <%= check_box_tag 'fields[]', field, query.has_filter?(field), :onclick => "toggle_filter('#{field}');", :id => "cb_#{field}" %>
        <label for="cb_<%= field %>"><%= l(("field_"+field.to_s.gsub(/\_id$/, "")).to_sym) %></label>
    </td>
    <td valign="top" width="150">
        <%= select_tag "operators[#{field}]", options_for_select(Query.operators_for_select(options[:type]), query.operator_for(field)), :onchange => "toggle_operator('#{field}');", :class => "select-small", :style => "vertical-align: top;" %>
    </td>
    <td valign="top">    
    <div id="values_div[<%= field %>]">
    <% case options[:type]
    when :list, :list_optional, :list_status %>
        <select <%= "multiple=true" if query.values_for(field) and query.values_for(field).length > 1 %>" name="values[<%= field %>][]" id="values[<%= field %>][]" class="select-small" style="vertical-align: top;">
        <%= options_for_select options[:values], query.values_for(field) %>        
        </select>
        <%= link_to_function '+', "toggle_multi_select('#{field}');" %>
    <% when :date, :date_past %>
        <%= text_field_tag "values[#{field}][]", query.values_for(field), :size => 3, :class => "select-small" %> jours
    <% end %>
    </div>
    </td>
    </tr>
    <script>toggle_filter('<%= field %>');</script>
<% end %>
</table>
</fieldset>