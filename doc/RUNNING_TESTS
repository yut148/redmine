Installing gems for testing
===========================

Remove your .bundle/config if you've already installed Redmine without
the test dependencies. Then, run `bundle install`.

Running Tests
=============

Run `rake --tasks test` to see available tests.
Run `rake test` to run the entire test suite (note that this will drop
and recreate your test database)

You can run `ruby test/unit/issue_test.rb` for running a single test case.

Before running tests, you need to configure both development
and test databases.

Creating test repositories
==========================

Redmine supports a wide array of different version control systems.
To test the support, a test repository needs to be created for each of those.

Run `rake --tasks test:scm:setup` for a list of available test-repositories or
run `rake test:scm:setup:all` to set up all of them. The repositories are
unpacked into {redmine_root}/tmp/test.

If the test repositories are not present, the tests that need them will be
skipped.

Creating a test ldap database
=============================

Redmine supports using LDAP for user authentications.  To test LDAP
with Redmine, load the LDAP export from test/fixtures/ldap/test-ldap.ldif
into a testing LDAP server. Make sure that the LDAP server can be accessed
at 127.0.0.1 on port 389.

Setting up the test LDAP server is beyond the scope of this documentation.
The OpenLDAP project provides a simple LDAP implementation that should work
good as a test server.

If the LDAP is not available, the tests that need it will be skipped.
